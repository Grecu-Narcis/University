Write a shell script that will receive as command line arguments a list of possible files or usernames.
    - if the argument indicates the name of an existing file (recursive), it will store in a file named file-reports.info the full path of the file and it will replace its content using the following rule e->3, a -> @, i -> !
    - if the argument indicates the name of an existing test usernames (you can use /etc/passwd), it will store in a file named user-reports.info the username and the number of .txt files found in its homedirectory (recursive).
    - if it was not found a file/user with the value of the argument, the script will store the values in a file name errors-report.info

    At the end, the script will have to print an info message telling what was the percentage of arguments that were files, usernames or none of them.

#!/bin/bash

`touch file-reports.info`
`touch user-reports.info`
`touch errors-report.info`

FILES=0
USERS=0
NONE=0

for ARG in $@; do
    FLAG=`find . -type f -name "$ARG"`

    if [ "$FLAG" = "" ]; then
        USER=`grep -E "$ARG" /etc/passwd | head -n 1`
        if [ "$USER" = "" ]; then
            NONE=`expr $NONE + 1`
            echo $ARG >> errors-report.info

        else
            USERS=`expr $USERS + 1`
            USERNAME=`grep -E "$ARG" /etc/passwd | head -n 1 | awk -F: '{print $5}' | awk '{print $5, $6, $7 }'`
            USER_DIR=`grep -E "$ARG" /etc/passwd | head -n 1 | awk -F: '{print $6}'`
            COUNT=`find $USER_DIR -type f -name "*.txt" | grep -c "\.txt$"`
            echo $USERNAME, $COUNT >> user-reports.info
        fi

    else
        FILES=`expr $FILES + 1`
        CONTENT=`sed "y/eai/3@!/" $FLAG`
        A=`find . -type f -name "$ARG" | sed "s/.//"`
        echo $CONTENT > $FLAG

        DIR=`pwd`
        echo $DIR$A >> file-reports.info
    fi
done

echo "Files: $FILES / $#"
echo "Users: $USERS / $#"
echo "None: $NONE / $#"